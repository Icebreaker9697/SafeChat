package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import hello.User;
import hello.UserRepository;

@Controller //This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController{
	@Autowired //This means to get the bean called userRepository
				// Which is auto-generated by Spring. We will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/add") //Map ONLY GET Requests
	public @ResponseBody String addNewUser(@RequestParam String username, @RequestParam String passHash, @RequestParam String userPublicKey, @RequestParam String userPrivateKey){

		User u = userRepository.findByUsername(username);

		if(u != null) {
			return "User with that username already exists!";
		}

		User n = new User();
		n.setUsername(username);
		n.setPassHash(passHash);
		n.setUserPublicKey(userPublicKey);
		n.setUserPrivateKey(userPrivateKey);

		userRepository.save(n);
		return "Success";
	}
	
	@GetMapping(path="/login") //Map ONLY GET Requests
	public @ResponseBody String login(@RequestParam String username, @RequestParam String enteredPassword){
		User u = userRepository.findByUsername(username);
		if(u == null) {
			return "No login found for that username!";
		}
		
		String originalPassword = u.getPassHash();
		
		if(!Hasher.validatePassword(enteredPassword, originalPassword)) {
			return "Wrong password!";
		}
		
		return "Success";
	}

	/*
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		//This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@GetMapping(path="/get")
	public @ResponseBody String getByEmail(String username) {
		//This returns a JSON or XML with the users
		User u = userRepository.findByUsername(username);
		return u.getPassHash();
	}
	*/
}